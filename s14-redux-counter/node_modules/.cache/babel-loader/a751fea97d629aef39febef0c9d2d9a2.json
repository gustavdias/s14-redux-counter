{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/khan/code/react-c-g-u/s14-redux/s14-redux-counter/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport reducer from \"./store/reducer\"; //!a special package because redux alone is standalone, it is not connected to react.\n//*allows us to hook up our redux store to our react application.\n\nimport { Provider } from \"ŕeact-redux\"; //allows us to kind of inject our store into the react components\n//! Connecting Store to Reducer\n//!Redux - This store should be created right before our application or when our application starts\n\nimport { createStore } from \"redux\"; //Then before mounting the app, I'll create the store and store it in a constant named store\n\nconst store = createStore(reducer); //wrap our app component with provider\n\nReactDOM.render(\n/*#__PURE__*/\n//For hooking up the provider component with our store - set up special property\n_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nregisterServiceWorker();","map":{"version":3,"sources":["/home/khan/code/react-c-g-u/s14-redux/s14-redux-counter/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","reducer","Provider","createStore","store","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CACA;AACA;;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAAuC;AAEvC;AAEA;;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAEA;;AACA,MAAMC,KAAK,GAAGD,WAAW,CAACF,OAAD,CAAzB,C,CAEA;;AACAH,QAAQ,CAACO,MAAT;AAAA;AACI;AACF,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAFF,EAKEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF;AAOAP,qBAAqB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport reducer from \"./store/reducer\";\n//!a special package because redux alone is standalone, it is not connected to react.\n//*allows us to hook up our redux store to our react application.\nimport { Provider } from \"ŕeact-redux\";//allows us to kind of inject our store into the react components\n\n//! Connecting Store to Reducer\n\n//!Redux - This store should be created right before our application or when our application starts\nimport { createStore } from \"redux\";\n\n//Then before mounting the app, I'll create the store and store it in a constant named store\nconst store = createStore(reducer);\n\n//wrap our app component with provider\nReactDOM.render(\n    //For hooking up the provider component with our store - set up special property\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}